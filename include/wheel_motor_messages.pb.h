/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_PROTOS_WHEEL_MOTOR_PROTOS_WHEEL_MOTOR_MESSAGES_PB_H_INCLUDED
#define PB_PROTOS_WHEEL_MOTOR_PROTOS_WHEEL_MOTOR_MESSAGES_PB_H_INCLUDED
#include "pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _ControlMode {
    ControlMode_BREAK = 0,
    ControlMode_IDLE = 1,
    ControlMode_VELOCITY = 2
} ControlMode;

/* Struct definitions */
typedef struct _WheelMotorCommand {
    ControlMode control_mode;
    pb_size_t velocity_setpoint_count;
    float velocity_setpoint[8];
    pb_size_t kp_count;
    float kp[8];
} WheelMotorCommand;

typedef struct _WheelMotorState {
    ControlMode control_mode;
    pb_size_t velocity_count;
    float velocity[8];
} WheelMotorState;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _ControlMode_MIN ControlMode_BREAK
#define _ControlMode_MAX ControlMode_VELOCITY
#define _ControlMode_ARRAYSIZE ((ControlMode)(ControlMode_VELOCITY+1))

#define WheelMotorCommand_control_mode_ENUMTYPE ControlMode

#define WheelMotorState_control_mode_ENUMTYPE ControlMode


/* Initializer values for message structs */
#define WheelMotorCommand_init_default           {_ControlMode_MIN, 0, {0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0}}
#define WheelMotorState_init_default             {_ControlMode_MIN, 0, {0, 0, 0, 0, 0, 0, 0, 0}}
#define WheelMotorCommand_init_zero              {_ControlMode_MIN, 0, {0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0}}
#define WheelMotorState_init_zero                {_ControlMode_MIN, 0, {0, 0, 0, 0, 0, 0, 0, 0}}

/* Field tags (for use in manual encoding/decoding) */
#define WheelMotorCommand_control_mode_tag       1
#define WheelMotorCommand_velocity_setpoint_tag  2
#define WheelMotorCommand_kp_tag                 3
#define WheelMotorState_control_mode_tag         1
#define WheelMotorState_velocity_tag             2

/* Struct field encoding specification for nanopb */
#define WheelMotorCommand_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    control_mode,      1) \
X(a, STATIC,   REPEATED, FLOAT,    velocity_setpoint,   2) \
X(a, STATIC,   REPEATED, FLOAT,    kp,                3)
#define WheelMotorCommand_CALLBACK NULL
#define WheelMotorCommand_DEFAULT NULL

#define WheelMotorState_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    control_mode,      1) \
X(a, STATIC,   REPEATED, FLOAT,    velocity,          2)
#define WheelMotorState_CALLBACK NULL
#define WheelMotorState_DEFAULT NULL

extern const pb_msgdesc_t WheelMotorCommand_msg;
extern const pb_msgdesc_t WheelMotorState_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define WheelMotorCommand_fields &WheelMotorCommand_msg
#define WheelMotorState_fields &WheelMotorState_msg

/* Maximum encoded size of messages (where known) */
#define PROTOS_WHEEL_MOTOR_PROTOS_WHEEL_MOTOR_MESSAGES_PB_H_MAX_SIZE WheelMotorCommand_size
#define WheelMotorCommand_size                   82
#define WheelMotorState_size                     42

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
